@import "../utils/main";

// Typography and Spacing Defaults
// ==========================================================================

html {
  font-family: $gentona;
  font-size: 100%;
  font-weight: 400;
  font-style: normal;
}

body {

  // Now that main-nav, modals, and overlays are outside of .page-container for
  // accessibility purposes, they must specifically be given the same font-size
  // changes at each breakpoint.
  > * {
    font-size: 1em;

    @include breakpoint_lap_width() {
      font-size: $breakpoint_lap_font_size;
    }

    @include breakpoint_desk_width() {
      font-size: $breakpoint_desk_font_size;
    }

    @include breakpoint_wall_width() {
      font-size: $breakpoint_wall_font_size;
    }

    @include breakpoint_jumbotron_width() {
      font-size: $breakpoint_jumbotron_font_size;
    }
  }

  #layout-debugger {
    font-size: 1em !important;
  }
}

dl,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
ol,
p,
ul,
.teaser {
  margin: 0;

  + * {
    margin-top: ($standard_spacing / 3);
  }
}

* {

  + dl,
  + figure,
  + h1,
  + h2,
  + h3,
  + h4,
  + h5,
  + h6,
  + ol,
  + p,
  + ul,
  + .teaser {
    margin-top: ($standard_spacing / 3);
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1em;
}

p {

  a {
    font-weight: 400;
  }

  &:empty {
    display: none;
  }
}

blockquote {

  cite {
    color: $gray4;
    // display: block;
    font-family: $gentona;
    font-size: $small;
    font-weight: 400;
    margin-top: #{($standard_spacing / 6) / $small}em;
    // text-align: right;

    &::before {
      content: '\2014';
      display: inline;
    }
  }
}

a,
button,
.button {
  background: transparent;
  font-size: 1em; // undo user agent font size in chrome
  text-decoration: none;
  cursor: pointer;
}

b,
strong {
  font-weight: 600;
}

em {
  font-style: italic;
}

dl {
  font-family: $gentona;

  dd {
    margin-left: 0.5em;

    + dd {
      margin-top: 0.25em;
    }

    + dt {
      margin-top: #{0.5em / $x-small}em;
    }
  }

  dt {
    font-size: $x-small;
    font-weight: 700;

    + dd {
      margin-top: 0;
    }

    + dt {
      margin-top: #{0.25em / $x-small}em;
    }
  }
}

ul,
ol {
  // margin: ($standard_spacing / 12) 0 ($standard_spacing / 3) 0;
  padding: 0;

  // &:first-child { margin-top: 0; }
  // &:last-child { margin-bottom: 0; }

  li {
    // margin-bottom: ($standard_spacing / 12);
    //
    // &:first-child { margin-top: 0 !important; }
    // &:last-child { margin-bottom: 0 !important; }

    + li {
      margin-top: ($standard_spacing / 12);
    }
  }
}

figure {
  margin-left: 0;
  margin-right: 0;
  width: 100%;

  figcaption {
    // border-bottom: solid $black $light;
    color: $gray3;
    font-size: $x-small;
    padding: #{($standard_spacing / 8) / $x-small}em 0 0 0;
  }

  iframe,
  img {
    display: block;
    // height: auto;
    // width: 100%;
  }

  img {
    height: auto;
    width: 100%;
  }
}

.is-type-video {

  &.wp-embed-aspect-4-3,
  &.wp-embed-aspect-16-9 {

    figcaption {
      border-bottom: solid $gray1 #{$thin / $x-small}em;
      padding-bottom: #{($standard_spacing / 8) / $x-small}em;
    }

    iframe {
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%;
      z-index: $stack_normal;
    }

    .wp-block-embed__wrapper {
      height: 0;
      position: relative;
      width: 100%;
      z-index: $stack_normal;
    }
  }

  &.wp-embed-aspect-4-3 {

    .wp-block-embed__wrapper {
      padding-bottom: 75%;
    }
  }


  &.wp-embed-aspect-16-9 {

    .wp-block-embed__wrapper {
      padding-bottom: percentage(9/16);
    }
  }
}

.wp-block-image {

  a,
  img {
    display: block;
    width: 100%;
  }

  a {
    border: none;
  }

  img {
    height: auto;
  }
}



// Button Sizes
* {

  + button,
  + .button,
  + input[type="button"],
  + input[type="submit"] {
    margin-top: $standard_spacing / 3;

    &.xx-small {
      margin-top: #{($standard_spacing / 3) / $xx-small}em;
    }

    &.x-small {
      margin-top: #{($standard_spacing / 3) / $x-small}em;
    }

    &.small {
      margin-top: #{($standard_spacing / 3) / $small}em;
    }

    &.large {
      margin-top: #{($standard_spacing / 3) / $large}em;
    }

    &.x-large {
      margin-top: #{($standard_spacing / 3) / $x-large}em;
    }
  }
}

.button,
form button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
  background-color: transparent;
  border: $light solid $black;
  color: $black;
  display: inline-block;
  font-size: $regular;
  font-weight: 600;
  line-height: 1em;
  padding: ($standard_spacing / 6) ($standard_spacing / 5);
  text-align: center;

  + * {
    margin-top: ($standard_spacing / 3);
  }

  &.xx-small {
    border-width: #{$thin / $xx-small}em;
    font-size: $xx-small;
    font-weight: 400;
    padding: #{($standard_spacing / 18) / $xx-small}em #{($standard_spacing / 8) / $xx-small}em;
  }

  &.x-small {
    border-width: #{$thin / $x-small}em;
    font-size: $x-small;
    font-weight: 400;
    padding: #{($standard_spacing / 12) / $x-small}em #{($standard_spacing / 8) / $x-small}em;
  }

  &.small {
    border-width: $light;
    font-size: $small;
    // font-weight: 600;
    padding: #{($standard_spacing / 8) / $small}em #{($standard_spacing / 6) / $small}em;
  }

  &.large {
    border-width: #{$medium / $large}em;
    font-size: $large;
    font-weight: 600;
    padding: #{($standard_spacing / 5) / $large}em #{($standard_spacing / 4) / $large}em;
  }

  &.x-large {
    border-width: #{$semi-bold / $x-large}em;
    font-size: $x-large;
    font-weight: 600;
    padding: #{($standard_spacing / 4) / $x-large}em #{($standard_spacing / 3) / $x-large}em;
    width: 100%;
  }

  + button,
  + .button,
  + input[type="button"],
  + input[type="submit"],
  + input[type="reset"] {
    margin-top: $standard_spacing / 6;

    &.xx-small {
      margin-top: #{($standard_spacing / 6) / $xx-small}em;
    }

    &.x-small {
      margin-top: #{($standard_spacing / 6) / $x-small}em;
    }

    &.small {
      margin-top: #{($standard_spacing / 6) / $small}em;
    }

    &.large {
      margin-top: #{($standard_spacing / 6) / $large}em;
    }

    &.x-large {
      margin-top: #{($standard_spacing / 6) / $x-large}em;
    }
  }

  // + button,
  // + .button { margin-top: 0; }
}

* {

  + table {
    margin-top: $standard_spacing / 6;
  }
}

table {
  // margin: ($standard_spacing / 12) 0 ($standard_spacing / 3) 0;
  font-family: $gentona;
  font-weight: 400;
  outline: $table_outline;
  width: 100%;

  // &:first-child { margin-top: 0; }
  // &:last-child { margin-bottom: 0; }

  caption {
    padding: ($standard_spacing / 6); // math for font-size
    background-color: $black;
    font-size: $regular;
    font-weight: 700;
    color: $white;
    text-align: center;
    text-transform: uppercase;
  }

  tr {
    border-bottom: $table_cell_border;

    &:last-child {
      border-bottom: 0;
    }

    th,
    td {
      border-right: $table_cell_border;
      overflow: hidden;

      &:last-child {
        border-right: none;
      }
    }

    th {
      background-color: $gray5;
      // border-color: $gray4;
      color: $white;
      font-size: $x-small;
      font-weight: 600;
      padding: #{($standard_spacing / 6) / $x-small}em;
      text-align: center;
      text-transform: uppercase;
    }

    td {
      font-size: $small;
      padding: #{($standard_spacing / 6) / $small}em;
      width: auto;
    }
  }

  + * {
    margin-top: $standard_spacing / 3;
  }
}

.page-container {
  background-color: $white;
}

.section {
  display: block;
  clear: both;
  position: relative;
  z-index: $stack_normal;
}

.center {
  position: relative;
  z-index: $stack-normal;
}

.icon-fallback {
  text-decoration: none;
  display: none;
  visibility: hidden;
}



// Utility Classes
// ==========================================================================

// Force-clear floats
.force:after {
  visibility: hidden;
  display: block;
  content: "";
  clear: both;
  height: 0;
}

* html .force             { zoom: 1; } /* IE6 */
*:first-child+html .force { zoom: 1; } /* IE7 */

// Recommendation from HTML5 boilerplate and originally from
// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
.hide {
  display: none;
}

// Hide only visually, but have it available for screen readers:
// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  // Extends the .visuallyhidden class to allow the element
  // to be focusable when navigated to via the keyboard:
  // https://www.drupal.org/node/897638
  &.focusable {

    &:active,
    &:focus {
      clip: auto;
      height: auto;
      margin: 0;
      overflow: visible;
      position: static;
      width: auto;
    }
  }
}
