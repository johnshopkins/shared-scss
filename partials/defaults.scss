@import "../utils/main";

// Typography and Spacing Defaults
// ==========================================================================

html {
  font-family: $gentona;
  font-size: 100%;
  font-weight: 300;
  font-style: normal;
}

body {

  // Now that main-nav, modals, and overlays are outside of .page-container for
  // accessibility purposes, they must specifically be given the same font-size
  // changes at each breakpoint.
  > * {
    font-size: 1em;

    @include breakpoint_lap_width() { font-size: $breakpoint_lap_font_size; }
    @include breakpoint_desk_width() { font-size: $breakpoint_desk_font_size; }
    @include breakpoint_wall_width() { font-size: $breakpoint_wall_font_size; }
    @include breakpoint_jumbotron_width() { font-size: $breakpoint_jumbotron_font_size; }
  }

  #layout-debugger { font-size: 1em !important; }
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
.teaser {
  // &:first-child { margin-top: 0 !important; }
  // &:last-child  { margin-bottom: 0 !important; }
  margin: 0;

  + * {
    margin-top: ($standard_spacing / 3);
  }
}

* {

  + h1,
  + h2,
  + h3,
  + h4,
  + h5,
  + h6,
  + p,
  + ul,
  + ol,
  + .teaser {
    margin-top: ($standard_spacing / 3);
  }
}

h1,
h2,
h3,
h4,
h5,
h6 { line-height: 1em; }

p {

  a { font-weight: 400; }
}

a,
button,
.button {
  background: transparent;
  font-size: 1em; // undo user agent font size in chrome
  text-decoration: none;
  cursor: pointer;
}

b, strong { font-weight: 500; }

em { font-style: italic; }

ul, ol {
  // margin: ($standard_spacing / 12) 0 ($standard_spacing / 3) 0;
  padding: 0;

  // &:first-child { margin-top: 0; }
  // &:last-child { margin-bottom: 0; }

  li {
    // margin-bottom: ($standard_spacing / 12);
    //
    // &:first-child { margin-top: 0 !important; }
    // &:last-child { margin-bottom: 0 !important; }

    + li {
      margin-top: ($standard_spacing / 12);
    }
  }
}

// Button Sizes
.button,
form button,
input[type="button"],
input[type="submit"] {

  &.inherit { font-size: 1em; }

  &.xx-small {
    margin: #{($standard_spacing / 12) / $xx-small}em 0 #{($standard_spacing / 3) / $xx-small}em 0; // makes margins add up to 1em of parent font size.
    padding: #{($standard_spacing / 18) / $xx-small}em #{($standard_spacing / 8) / $xx-small}em; // font-size math
    border-width: #{$thin / $xx-small}em; // font-size math
    font-size: $xx-small;
    font-weight: 500;

    &:first-child { margin-top: 0; }
    &:last-child { margin-bottom: 0; }
  }

  &.x-small {
    margin: #{($standard_spacing / 6) / $x-small}em 0 #{($standard_spacing / 3) / $x-small}em 0; // makes margins add up to 1em of parent font size.
    padding: #{($standard_spacing / 12) / $x-small}em #{($standard_spacing / 8) / $x-small}em; // font-size math
    border-width: #{$thin / $x-small}em; // font-size math
    font-size: $x-small;

    &:first-child { margin-top: 0; }
    &:last-child { margin-bottom: 0; }
  }

  &.small {
    margin: #{($standard_spacing / 6) / $small}em 0 #{($standard_spacing / 3) / $small}em 0; // makes margins add up to 1em of parent font size.
    padding: #{($standard_spacing / 8) / $small}em #{($standard_spacing / 6) / $small}em; // font-size math
    border-width: #{$thin / $small}em; // font-size math
    font-size: $small;

    &:first-child { margin-top: 0; }
    &:last-child { margin-bottom: 0; }
  }

  &.medium { font-size: 1em; }

  &.large {
    margin: #{($standard_spacing / 6) / $large}em 0 #{($standard_spacing / 3) / $large}em 0; // makes margins add up to 1em of parent font size.
    padding: #{($standard_spacing / 5) / $large}em #{($standard_spacing / 4) / $large}em; // font-size math
    border-width: #{$medium / $large}em; // font-size math
    font-size: $large;

    &:first-child { margin-top: 0; }
    &:last-child { margin-bottom: 0; }
  }

  &.x-large {
    width: 100%;
    margin: #{($standard_spacing / 6) / $x-large}em 0 #{($standard_spacing / 3) / $x-large}em 0; // makes margins add up to 1em of parent font size.
    padding: #{($standard_spacing / 4) / $x-large}em #{($standard_spacing / 3) / $x-large}em; // font-size math
    border-width: #{$semibold / $x-large}em; // font-size math
    font-size: $x-large;
    font-weight: 500;

    &:first-child { margin-top: 0; }
    &:last-child { margin-bottom: 0; }
  }

  + button,
  + .button { margin-top: 0; }
}

table {
  width: 100%;
  margin: ($standard_spacing / 12) 0 ($standard_spacing / 3) 0;
  outline: $table_outline;

  &:first-child { margin-top: 0; }
  &:last-child { margin-bottom: 0; }

  caption {
    padding: ($standard_spacing / 6); // math for font-size
    background-color: $black;
    font-size: $regular;
    font-weight: 700;
    color: $white;
    text-align: center;
    text-transform: uppercase;
  }

  tr {
    border-bottom: $table_cell_border;

    &:last-child { border-bottom: 0; }

    th, td {
      padding: ($standard_spacing / 6);
      border-right: $table_cell_border;
      overflow: hidden;

      &:last-child { border-right: none; }
    }

    th {
      padding: (($standard_spacing / 6) / $small); // math for font-size
      background-color: $gray5;
      // border-color: $gray4;
      font-size: $small;
      font-weight: 500;
      color: $white;
      text-align: center;
      text-transform: uppercase;
    }

    td { width: auto; }
  }
}

.page-container { background-color: $white; }

.section {
  display: block;
  clear: both;
  position: relative;
  z-index: $stack_normal;
}

.center {
  position: relative;
  z-index: $stack-normal;
}

.icon-fallback {
  text-decoration: none;
  display: none;
  visibility: hidden;
}



// Utility Classes
// ==========================================================================

// Force-clear floats
.force:after {
  visibility: hidden;
  display: block;
  content: "";
  clear: both;
  height: 0;
}

* html .force             { zoom: 1; } /* IE6 */
*:first-child+html .force { zoom: 1; } /* IE7 */

// Recommendation from HTML5 boilerplate and originally from
// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
.hide { display: none; }

// Hide only visually, but have it available for screen readers:
// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// Extends the .visuallyhidden class to allow the element
// to be focusable when navigated to via the keyboard:
// https://www.drupal.org/node/897638

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}
