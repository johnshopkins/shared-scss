@import "../utils/main";

/* Typography and Spacing Defaults
========================================================================== */

html {
  font-family: $gentona;
  font-size: 100%;
  font-weight: 300;
  font-style: normal;
}

body {

  // Now that main-nav, modals, and overlays are outside of .page-container for
  // accessibility purposes, they must specifically be given the same font-size
  // changes at each breakpoint.
  > * {
    font-size: 1em;

    @include breakpoint_lap_width() {
      @include breakpoint_lap_height() { font-size: 1.1em; }
    }

    @include breakpoint_desk_width() {
      @include breakpoint_desk_height() { font-size: 1.2em; }
    }

    @include breakpoint_wall_width() {
      @include breakpoint_wall_height() { font-size: 1.3em; }
    }

    @include breakpoint_jumbotron_width() {
      @include breakpoint_jumbotron_height() { font-size: 1.4em; }
    }
  }

  #layout-debugger { font-size: 1em !important; }
}

b, strong { font-weight: 500; }

em { font-style: italic; }

.page-container { background-color: $white; }

.section {
  display: block;
  clear: both;
  position: relative;
  z-index: $stack_normal;
}

.center {
  position: relative;
  z-index: $stack-normal;
}

.icon-fallback {
  text-decoration: none;
  display: none;
  visibility: hidden;
}



/* Search Boxes
========================================================================== */

.search-box {
  width: 100%;
  margin: 0;
  position: relative;
  background-color: transparent;

  form {
    width: 100%;
    background-color: $sparta;
  }

  label { display: none; }

  input,
  button {
    margin: 0;
    border-style: solid;
    border-color: $sparta;
    font-weight: 400;
    line-height: 100%;
    @include border-radius(0);
  }

  input {
    @include search_input(stacked);
    height: #{$standard_spacing / $large}em; // font math
    font-size: $large;
    color: $black;
  }

  button {
    @include search_button(stacked);
    background-color: $sparta;
    color: $white !important;
    text-align: center;
    text-transform: uppercase;
    @include transition(background-color);
    @include transition-duration($run);
    @include transition-timing-function(ease-in-out);

    &:hover {
      background-color: $black;
      color: $white !important;
    }

    .fa {
      margin-right: ($standard_spacing / 12);
      color: inherit !important;
    }
  }
}



/* Utility Classes
========================================================================== */

// Force-clear floats
.force:after {
  visibility: hidden;
  display: block;
  content: "";
  clear: both;
  height: 0;
}

* html .force             { zoom: 1; } /* IE6 */
*:first-child+html .force { zoom: 1; } /* IE7 */

/*
 * Recommendation from HTML5 boilerplate and originally from
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.hide { display: none; }

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}
